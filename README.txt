first ts practice
react + mobX + ts


немного о том, как выстроена логика:
Есть состояние active, которое отвечает за рендеринг (либо список, либо эдитор) - ему отведен ActiveStore.
Есть два возможных темплейта ui: список задач и редактор задач (далее таски и эдитор)

Таски - это массив из компонентов Таск, каждый из которых хранит в себе информацию о задаче: дату, название, описание и айди
Удаление проиходит по айди

Айди у всех уникальный, присваивается при создании таски, если была удалена таска с айди 3, то больше таких не будет (банально globalId++)

Создание новой задачи и редактура старых происходит в эдиторе
При редактуре старой (метод taskById) в эдитор передаётся её копия, и если были сохранены изменения, то в массиве происходит замена данных этой таски на данные из эдитора
При создании новой (метод newTask) берётся пустой шаблон, после сохранения ему присваивается новый айди.

ЭдиторСтор отвечает за логику эдитора
Помимо просто контроля инпутов идёт общение с ТаскСтором посредством метода ТаскСтора addTask
Так как эдитор в момент вызова хранит информацию только о таске, он (эдитор) не знает, редактируется старая или создается новая, поэтому для сохранения изменений нужен был один метод, это как раз addTask
В этот метод передаётся data из эдитора, идёт проверка массива tasks, если найдётся совпадение по айди - замена старых данных на новые, иначе добавление в конец и globalId++

